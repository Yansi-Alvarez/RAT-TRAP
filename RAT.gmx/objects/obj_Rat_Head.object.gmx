<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Head_Standard_Idle_Down_Left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>head = false;

cursor = false;

walk_up_left = false;

walk_up_right = false;

walk_down_left = false;

walk_down_right = false;

particle_destroy = false;

image_speed = 0.3;

sprite_index = spr_Head_Standard_Idle_Down_Left;

hspeed = 0;

vspeed = 0;

img_index = 0;

global.Player_Health = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gun Attachment Code for the left arm
if (global.gun_collision == true) {
if (global.weapon_attach_left_arm == true) and (global.weapon_picked_up = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
}
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Gun Attachment Code for the right arm

if (global.weapon_attach_right_arm == true) and (global.weapon_picked_up = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Right_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Back_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        global.obj_Gun_In_Use.sprite_index = global.sprite_index_Left_Gun_In_Use;
        global.obj_Gun_In_Use.x = obj_Rat_Front_Arm.x;
        global.obj_Gun_In_Use.y = obj_Rat_Front_Arm.y;
    }
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
//Gun Attachment Code for the left arm while dual weidling

if (global.weapon_attach_left_arm == true) and (global.weapon_picked_up_again = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Gun Attachment Code for the right arm while dual weilding

if (global.weapon_attach_right_arm == true) and (global.weapon_picked_up_again = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (global.gun_2_collision == true) {
if (global.weapon_attach_left_arm == true) and (global.weapon_picked_up = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Gun Attachment Code for the right arm

if (global.weapon_attach_right_arm == true) and (global.weapon_picked_up = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun_2.x = obj_Rat_Back_Arm.x;
        obj_Gun_2.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun_2.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun_2.x = obj_Rat_Front_Arm.x;
        obj_Gun_2.y = obj_Rat_Front_Arm.y;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Gun Attachment Code for the left arm while dual weidling

if (global.weapon_attach_left_arm == true) and (global.weapon_picked_up_again = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Gun Attachment Code for the right arm while dual weilding

if (global.weapon_attach_right_arm == true) and (global.weapon_picked_up_again = true) {
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Down_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Idle_Up_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Down_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Left) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Left;
        obj_Gun.x = obj_Rat_Front_Arm.x;
        obj_Gun.y = obj_Rat_Front_Arm.y;
    }
    
    if (sprite_index = spr_Head_Standard_Walking_Up_Right) {
        obj_Gun.sprite_index = spr_Handgun_Potato_Right;
        obj_Gun.x = obj_Rat_Back_Arm.x;
        obj_Gun.y = obj_Rat_Back_Arm.y;
    }
}
}*/
    
    
    
    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code for the R.A.T.

if ((instance_exists(obj_Rat_Head)) and (head == false)) {
    
    //Body Parts
    instance_create(obj_Rat_Head.x + 7, obj_Rat_Head.y + 11, obj_Rat_Body)
    instance_create(obj_Rat_Head.x + 5, obj_Rat_Head.y + 25, obj_Rat_Legs)
    instance_create(obj_Rat_Head.x + 5, obj_Rat_Head.y + 20, obj_Rat_Front_Arm)
    instance_create(obj_Rat_Head.x - 7, obj_Rat_Head.y + 15, obj_Rat_Back_Arm)
    instance_create(obj_Rat_Head.x + 12, obj_Rat_Head.y + 16, obj_Rat_Tail)
    
    //Spawning for pistol
    //instance_create(obj_Rat_Head.x + 50,obj_Rat_Head.y,obj_Potato_Handgun)
    //instance_create(obj_Rat_Head.x - 50,obj_Rat_Head.y,obj_Gun_2)
    
    //Spawning Enemy
    //instance_create(obj_Rat_Head.x + 200, obj_Rat_Head.y + 50, obj_Bullbug)
    
    //Cursor Code
    instance_create(mouse_x, mouse_y, obj_Cursor)

    head = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.Player_Health == 5) or (global.Player_Health == 4)) {
    img_index += 1.0
}

if ((global.Player_Health == 3) or (global.Player_Health == 2)) {
    img_index += 2.0
}

if (global.Player_Health &lt;= 1) {
    img_index += 4.0
}
/*
if (img_index &gt; sprite_get_number(spr_Full_Health)) or (img_index &gt; sprite_get_number(spr_Medium_Health)) or (img_index &gt; sprite_get_number(spr_Low_Health)) {
    img_index = 0
}
*/

obj_Cursor.x = mouse_x;
obj_Cursor.y = mouse_y;

direction_player = point_direction(obj_Rat_Head.x, obj_Rat_Head.y, obj_Cursor.x, obj_Cursor.y)

//Angle of player, if between 0 and 89 degrees, looks to the up-right

if  ((direction_player &gt;= 0) and (direction_player &lt;= 89)) and (walk_up_right == false) {

    sprite_index = spr_Head_Standard_Idle_Up_Right;
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Right;
    
    if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Right) {
        obj_Rat_Front_Arm.x = obj_Rat_Head.x + 5;
        obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Right;
    
    if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Right) {
        obj_Rat_Back_Arm.x = obj_Rat_Head.x + 1;
        obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Right; 
    
    obj_Rat_Back_Arm.depth = 2;
    obj_Rat_Body.depth = 1;
    obj_Rat_Head.depth = 2;
    obj_Rat_Legs.depth = 2;
    obj_Rat_Tail.depth = 0;
    obj_Rat_Front_Arm.depth = 0;
    
    if (global.weapon_attach_left_arm == true) {
    
        global.obj_Gun_In_Use.depth = 2;
        //obj_Gun_2.depth = 2;
    }
    
    if (global.weapon_attach_right_arm == true) {
    
        global.obj_Gun_In_Use.depth = 0;
        //obj_Gun_2.depth = 0;
    }
    
    if (keyboard_check(ord('D')) or keyboard_check(ord('A')) or keyboard_check(ord('W')) or keyboard_check(ord('S'))) {
        
        sprite_index = spr_Head_Standard_Walking_Up_Right;
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Right;
        
        if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Right) {
            obj_Rat_Front_Arm.x = obj_Rat_Head.x + 5;
            obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Right;
        
        if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Right) {
            obj_Rat_Back_Arm.x = obj_Rat_Head.x + 1;
            obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Right;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Up_Right;    
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Up_Right; 
        
        walk_up_right = true;
    }
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 90 and 179 degrees, looks to the up-left

if ((direction_player &gt;= 90) and (direction_player &lt;= 179)) and (walk_up_left == false) {
    
    sprite_index = spr_Head_Standard_Idle_Up_Left;
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Left;
    
    if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Left) {
        obj_Rat_Front_Arm.x = obj_Rat_Head.x - 5;
        obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Left;
    
    if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Left) {
        obj_Rat_Back_Arm.x = obj_Rat_Head.x - 1;
        obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Left; 
    
    obj_Rat_Back_Arm.depth = 2;
    obj_Rat_Body.depth = 1;
    obj_Rat_Head.depth = 2;
    obj_Rat_Legs.depth = 2;
    obj_Rat_Tail.depth = 0;
    obj_Rat_Front_Arm.depth = 0;
    
    if (global.weapon_attach_left_arm == true) {
    
        global.obj_Gun_In_Use.depth = 0;
        //obj_Gun_2.depth = 0;
    }
    
    if (global.weapon_attach_right_arm == true) {
    
        global.obj_Gun_In_Use.depth = 2;
        //obj_Gun_2.depth = 2;
    }
    
    if (keyboard_check(ord('D')) or keyboard_check(ord('A')) or keyboard_check(ord('W')) or keyboard_check(ord('S'))) {
        
        sprite_index = spr_Head_Standard_Walking_Up_Left;
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Left;
        
        if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Left) {
            obj_Rat_Front_Arm.x = obj_Rat_Head.x - 5;
            obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
        }
        
        //////////////////////////////////////////////////////////////////
    
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Left;
        
        if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Left) {
            obj_Rat_Back_Arm.x = obj_Rat_Head.x - 1;
            obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Left;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Up_Left;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Up_Left; 
        
        walk_up_left = true;
    } 
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 180 and 269 degrees, looks to the down-left

if ((direction_player &gt;= 180) and (direction_player &lt;= 269)) and (walk_down_left == false) {

    sprite_index = spr_Head_Standard_Idle_Down_Left;
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Left;
    
    if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Left) {
        obj_Rat_Front_Arm.x = obj_Rat_Head.x + 5;
        obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
    }
    
    ////////////////////////////////////////////////////////////////// 
    
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Left;
    
    if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Left) {
        obj_Rat_Back_Arm.x = obj_Rat_Head.x - 7;
        obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
    }

    ////////////////////////////////////////////////////////////////// 
    
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Left; 
    
    obj_Rat_Back_Arm.depth = 2;
    obj_Rat_Body.depth = 1;
    obj_Rat_Head.depth = 0;
    obj_Rat_Legs.depth = 2;
    obj_Rat_Tail.depth = 3;
    obj_Rat_Front_Arm.depth = 0;
    
    if (global.weapon_attach_left_arm == true) {
    
        global.obj_Gun_In_Use.depth = 0;
        //obj_Gun_2.depth = 0;
    }
    
    if (global.weapon_attach_right_arm == true) {
    
        global.obj_Gun_In_Use.depth = 0;//
        //obj_Gun_2.depth = 0;
    }
    
    if (keyboard_check(ord('D')) or keyboard_check(ord('A')) or keyboard_check(ord('W')) or keyboard_check(ord('S'))) {
        
        sprite_index = spr_Head_Standard_Walking_Down_Left;
        
        ////////////////////////////////////////////////////////////////// 
        
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Left;
        
        if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Left) {
            obj_Rat_Front_Arm.x = obj_Rat_Head.x + 5;
            obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
        }
        
        ////////////////////////////////////////////////////////////////// 
        
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Left;
        
        if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Left) {
            obj_Rat_Back_Arm.x = obj_Rat_Head.x - 7;
            obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Left;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Down_Left;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Down_Left; 
        
        walk_down_left = true;
    }  
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 270 and 359 degrees, looks to the down-right

if ((direction_player &gt;= 270) and (direction_player &lt;= 359)) and (walk_down_right == false) {

    sprite_index = spr_Head_Standard_Idle_Down_Right;
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Right;
    
    if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Right) {
        obj_Rat_Front_Arm.x = obj_Rat_Head.x - 5;
        obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Right;
    
    if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Right) {
        obj_Rat_Back_Arm.x = obj_Rat_Head.x + 7;
        obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
    }
    
    //////////////////////////////////////////////////////////////////
    
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Right;
    
    obj_Rat_Back_Arm.depth = 2;
    obj_Rat_Body.depth = 1;
    obj_Rat_Head.depth = 0;
    obj_Rat_Legs.depth = 2;
    obj_Rat_Tail.depth = 3;
    obj_Rat_Front_Arm.depth = 0;
    
    if (global.weapon_attach_left_arm == true) {
    
        global.obj_Gun_In_Use.depth = 1;
        //obj_Gun_2.depth = 1;
    }
    
    if (global.weapon_attach_right_arm == true) {
    
        global.obj_Gun_In_Use.depth = 0;
        //obj_Gun_2.depth = 0;
    }
    
    if (keyboard_check(ord('D')) or keyboard_check(ord('A')) or keyboard_check(ord('W')) or keyboard_check(ord('S'))) {
        
        sprite_index = spr_Head_Standard_Walking_Down_Right;
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Right;
        
        if (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Right) {
            obj_Rat_Front_Arm.x = obj_Rat_Head.x - 5;
            obj_Rat_Front_Arm.y = obj_Rat_Head.y + 20;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Right;
        
        if (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Right) {
            obj_Rat_Back_Arm.x = obj_Rat_Head.x + 7;
            obj_Rat_Back_Arm.y = obj_Rat_Head.y + 15;
        }
        
        //////////////////////////////////////////////////////////////////
        
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Right;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Down_Right;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Down_Right; 
        
        walk_down_right = true;
    }
} 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Direction of the speed

//Right Direction

    if keyboard_check(ord('D')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
    
        hspeed = 5; 
        obj_Rat_Front_Arm.hspeed = 5; 
        obj_Rat_Back_Arm.hspeed = 5; 
        obj_Rat_Body.hspeed = 5; 
        obj_Rat_Legs.hspeed = 5; 
        obj_Rat_Tail.hspeed = 5; 
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Left Direction

    if keyboard_check(ord('A')) {
        
        image_speed = 0.3
        obj_Rat_Front_Arm.image_speed = 0.3
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
        
        hspeed = -5; 
        obj_Rat_Front_Arm.hspeed = -5; 
        obj_Rat_Back_Arm.hspeed = -5; 
        obj_Rat_Body.hspeed = -5; 
        obj_Rat_Legs.hspeed = -5; 
        obj_Rat_Tail.hspeed = -5; 
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Up Direction

    if keyboard_check(ord('W')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
        
        vspeed = -5; 
        obj_Rat_Front_Arm.vspeed = -5; 
        obj_Rat_Back_Arm.vspeed = -5; 
        obj_Rat_Body.vspeed = -5; 
        obj_Rat_Legs.vspeed = -5; 
        obj_Rat_Tail.vspeed = -5; 
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Down Direction

    if keyboard_check(ord('S')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
        
        vspeed = 5; 
        obj_Rat_Front_Arm.vspeed = 5; 
        obj_Rat_Back_Arm.vspeed = 5; 
        obj_Rat_Body.vspeed = 5; 
        obj_Rat_Legs.vspeed = 5; 
        obj_Rat_Tail.vspeed = 5; 
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//If keys are released while walking, R.A.T. returns to its idle stance

    if keyboard_check_released(ord('D')) {
        
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
              
        hspeed = 0; 
        obj_Rat_Front_Arm.hspeed = 0; 
        obj_Rat_Back_Arm.hspeed = 0; 
        obj_Rat_Body.hspeed = 0; 
        obj_Rat_Legs.hspeed = 0; 
        obj_Rat_Tail.hspeed = 0; 
            
        vspeed = 0; 
        obj_Rat_Front_Arm.vspeed = 0; 
        obj_Rat_Back_Arm.vspeed = 0; 
        obj_Rat_Body.vspeed = 0; 
        obj_Rat_Legs.vspeed = 0; 
        obj_Rat_Tail.vspeed = 0; 
            
        walk_up_left = false;
        walk_up_right = false;
        walk_down_left = false;
        walk_down_right = false;
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
    if keyboard_check_released(ord('A')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
          
        vspeed = 0; 
        obj_Rat_Front_Arm.vspeed = 0; 
        obj_Rat_Back_Arm.vspeed = 0; 
        obj_Rat_Body.vspeed = 0; 
        obj_Rat_Legs.vspeed = 0; 
        obj_Rat_Tail.vspeed = 0; 
        
        hspeed = 0; 
        obj_Rat_Front_Arm.hspeed = 0; 
        obj_Rat_Back_Arm.hspeed = 0; 
        obj_Rat_Body.hspeed = 0; 
        obj_Rat_Legs.hspeed = 0; 
        obj_Rat_Tail.hspeed = 0; 
            
        walk_up_left = false;
        walk_up_right = false;
        walk_down_left = false;
        walk_down_right = false;
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
    if keyboard_check_released(ord('W')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
          
        hspeed = 0; 
        obj_Rat_Front_Arm.hspeed = 0; 
        obj_Rat_Back_Arm.hspeed = 0; 
        obj_Rat_Body.hspeed = 0; 
        obj_Rat_Legs.hspeed = 0; 
        obj_Rat_Tail.hspeed = 0; 
        
        vspeed = 0; 
        obj_Rat_Front_Arm.vspeed = 0; 
        obj_Rat_Back_Arm.vspeed = 0; 
        obj_Rat_Body.vspeed = 0; 
        obj_Rat_Legs.vspeed = 0; 
        obj_Rat_Tail.vspeed = 0; 
        
        walk_up_left = false;
        walk_up_right = false;
        walk_down_left = false;
        walk_down_right = false;
    }

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
    if keyboard_check_released(ord('S')) {
    
        image_speed = 0.3;
        obj_Rat_Front_Arm.image_speed = 0.3;
        obj_Rat_Back_Arm.image_speed = 0.3;
        obj_Rat_Body.image_speed = 0.3;
        obj_Rat_Legs.image_speed = 0.3;
        obj_Rat_Tail.image_speed = 0.3;
        
        vspeed = 0; 
        obj_Rat_Front_Arm.vspeed = 0; 
        obj_Rat_Back_Arm.vspeed = 0; 
        obj_Rat_Body.vspeed = 0; 
        obj_Rat_Legs.vspeed = 0; 
        obj_Rat_Tail.vspeed = 0; 
          
        hspeed = 0; 
        obj_Rat_Front_Arm.hspeed = 0; 
        obj_Rat_Back_Arm.hspeed = 0; 
        obj_Rat_Body.hspeed = 0; 
        obj_Rat_Legs.hspeed = 0; 
        obj_Rat_Tail.hspeed = 0; 
            
        walk_up_left = false;
        walk_up_right = false;
        walk_down_left = false;
        walk_down_right = false;
            
    }

//End animation for stun

if  (sprite_index = spr_Head_Standard_Stun_Down_Left) and 
    (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Stun_Down_Left) and 
    (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Stun_Down_Left) and 
    (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Left) and
    (obj_Rat_Legs.sprite_index = spr_Legs_Standard_Stun_Down_Left) and
    (obj_Rat_Tail.sprite_index = spr_Tail_Standard_Stun_Down_Left) {
    
    sprite_index = spr_Head_Standard_Idle_Down_Left;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Left;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Left;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Left;
}

if  (sprite_index = spr_Head_Standard_Stun_Down_Right) and 
    (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Stun_Down_Right) and 
    (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Stun_Down_Right) and 
    (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Right) and
    (obj_Rat_Legs.sprite_index = spr_Legs_Standard_Stun_Down_Right) and
    (obj_Rat_Tail.sprite_index = spr_Tail_Standard_Stun_Down_Right) {
    
    sprite_index = spr_Head_Standard_Idle_Down_Right;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Right;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Right;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Right;
}

if  (sprite_index = spr_Head_Standard_Stun_Up_Left) and 
    (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Stun_Up_Left) and 
    (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Stun_Up_Left) and 
    (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Left) and
    (obj_Rat_Legs.sprite_index = spr_Legs_Standard_Stun_Up_Left) and
    (obj_Rat_Tail.sprite_index = spr_Tail_Standard_Stun_Up_Left) {
    
    sprite_index = spr_Head_Standard_Idle_Up_Left;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Left;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Left;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Left;
}

if  (sprite_index = spr_Head_Standard_Stun_Up_Right) and 
    (obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Stun_Up_Right) and 
    (obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Stun_Up_Right) and 
    (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Right) and
    (obj_Rat_Legs.sprite_index = spr_Legs_Standard_Stun_Up_Right) and
    (obj_Rat_Tail.sprite_index = spr_Tail_Standard_Stun_Up_Right) {
    
    sprite_index = spr_Head_Standard_Idle_Up_Right;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Right;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Right;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Right;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.Player_Health == 5 or global.Player_Health == 4 {

    draw_self();
    draw_sprite(spr_Full_Health, floor(img_index), (view_xview[0] + 560),(view_yview[0] + 410));
    
}

if global.Player_Health == 3 or global.Player_Health == 2 {

    draw_self();
    draw_sprite(spr_Medium_Health, floor(img_index), (view_xview[0] + 560),(view_yview[0] + 410));
    
}

if global.Player_Health &lt;= 1 {

    draw_self();
    draw_sprite(spr_Low_Health, floor(img_index), (view_xview[0] + 560),(view_yview[0] + 410));
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
