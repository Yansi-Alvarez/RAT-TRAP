<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<room>
  <caption></caption>
  <width>1024</width>
  <height>768</height>
  <vsnap>64</vsnap>
  <hsnap>64</hsnap>
  <isometric>0</isometric>
  <speed>30</speed>
  <persistent>0</persistent>
  <colour>12632256</colour>
  <showcolour>-1</showcolour>
  <code>/*//The center of the room through its width, has to be divisible by 64
global.center_room_width = room_width/2

//The center of the room through its height, has to be divisible by 64
global.center_room_height = room_height/2

//Speed of the level maker, has to be same as grid width (64 for now) 
//so it can the objects can be aligned
global.level_maker_speed = 64;

////////////////////////////////////////////////////////////////////////////////

grid_width = (room_width/global.level_maker_speed); 
grid_height = (room_height/global.level_maker_speed);

grid_width_index = ((room_width/global.level_maker_speed) - 1); 
grid_height_index = ((room_height/global.level_maker_speed) - 1);

grid_map = ds_grid_create(grid_width, grid_height);
id_value = noone;

////////////////////////////////////////////////////////////////////////////////

//Floor for the level
level_floor = obj_Concrete_Floor;

////////////////////////////////////////////////////////////////////////////////

//Top Section
for (i = 1; i &lt; grid_width_index; i += 1) {

    id_value = instance_create((i * global.level_maker_speed), 0, obj_Wall_Lab_Down);
    ds_grid_set(grid_map, i, 0, id_value);
}

////////////////////////////////////////////////////////////////////////////////

//Right Section
for (j = 0; j &lt; grid_height_index; j += 1) {

    id_value = instance_create((grid_width_index * global.level_maker_speed), (j * global.level_maker_speed), obj_Wall_Lab_Left);
    ds_grid_set(grid_map, grid_width_index, j, id_value);
}

////////////////////////////////////////////////////////////////////////////////

//Bottom left corner
id_value = instance_create(0, (grid_height_index * global.level_maker_speed), obj_Wall_Lab_Full);
ds_grid_set(grid_map, 0, grid_height_index, id_value);

//Left Section
for (j = 0; j &lt; grid_height_index; j += 1) {

    id_value = instance_create(0, (j * global.level_maker_speed), obj_Wall_Lab_Right);
    ds_grid_set(grid_map, 0, j, id_value);
}

////////////////////////////////////////////////////////////////////////////////

//Bottom right corner
id_value = instance_create((grid_width_index * global.level_maker_speed), (grid_height_index * global.level_maker_speed), obj_Wall_Lab_Full);
ds_grid_set(grid_map, grid_width_index, grid_height_index, id_value);

//Bottom Section
for (i = 0; i &lt; grid_width_index; i += 1) {

    id_value = instance_create((i * global.level_maker_speed), (grid_height_index * global.level_maker_speed), obj_Wall_Lab_Up);
    ds_grid_set(grid_map, i, grid_height_index, id_value);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

for (i = 1; i &lt; grid_width_index; i += 1) {
    
    for (j = 1; j &lt; grid_height_index; j += 1) {
    
        id_value = instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), level_floor);
        ds_grid_set(grid_map, i, j, id_value);
        /*
        if ((i = 2) and (j = (grid_height_index - 2))) {
        
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_Build_Chamber);
        }
        *//*
        if ((i = (grid_width_index - 1)) and (j = (grid_height_index - 1))) {
        
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_Teleporter);
        }
        
        if (i = 6) and (j = 4) {
            
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_Potato_Handgun);
        }
        
        if (i = 10) and (j = 4) {
        
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_Beretta);
        }
        
        if (i = 6) and (j = 7) {
        
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_AR15);
        }
        
        if (i = 10) and (j = 7) {
        
            instance_create((i * global.level_maker_speed), (j * global.level_maker_speed), obj_P90);
        }
    }
}

instance_create(global.center_room_width, global.center_room_height, obj_Rat_Head);</code>
  <enableViews>-1</enableViews>
  <clearViewBackground>-1</clearViewBackground>
  <clearDisplayBuffer>-1</clearDisplayBuffer>
  <makerSettings>
    <isSet>0</isSet>
    <w>0</w>
    <h>0</h>
    <showGrid>0</showGrid>
    <showObjects>0</showObjects>
    <showTiles>0</showTiles>
    <showBackgrounds>0</showBackgrounds>
    <showForegrounds>0</showForegrounds>
    <showViews>0</showViews>
    <deleteUnderlyingObj>0</deleteUnderlyingObj>
    <deleteUnderlyingTiles>0</deleteUnderlyingTiles>
    <page>0</page>
    <xoffset>0</xoffset>
    <yoffset>0</yoffset>
  </makerSettings>
  <backgrounds>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
  </backgrounds>
  <views>
    <view visible="-1" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="960" hport="720" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
  </views>
  <instances/>
  <tiles/>
  <PhysicsWorld>0</PhysicsWorld>
  <PhysicsWorldTop>0</PhysicsWorldTop>
  <PhysicsWorldLeft>0</PhysicsWorldLeft>
  <PhysicsWorldRight>1024</PhysicsWorldRight>
  <PhysicsWorldBottom>768</PhysicsWorldBottom>
  <PhysicsWorldGravityX>0</PhysicsWorldGravityX>
  <PhysicsWorldGravityY>10</PhysicsWorldGravityY>
  <PhysicsWorldPixToMeters>0.100000001490116</PhysicsWorldPixToMeters>
</room>
